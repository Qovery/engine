defaultRules:
  create: true
  rules:
    alertmanager: false
    etcd: false
    configReloaders: true
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeProxy: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeStateMetrics: false
    nodeExporterAlerting: false
    nodeExporterRecording: false
    windows: false

kube-state-metrics:
  image:
    registry: public.ecr.aws/r3m4q3r9
    repository: pub-mirror-kube-state-metrics
  prometheus:
    monitor:
      enabled: true
      honorLabels: true
  metricLabelsAllowlist:
    - pods=[qovery.com/project-id,qovery.com/environment-id,qovery.com/service-id,qovery.com/deployment-id]
    - horizontalpodautoscalers=[qovery.com/service-id]
    - jobs=[qovery.com/service-id,qovery.com/deployment-id]
    - cronjobs=[qovery.com/service-id]
    - services=[qovery.com/service-id]
    - deployments=[qovery.com/service-id]
    - statefulsets=[qovery.com/service-id]
    - ingresses=[qovery.com/associated-service-id]
    - persistentvolumeclaims=[qovery.com/service-id]
  resources:
    limits:
      cpu: 75m
      memory: 384Mi
    requests:
      cpu: 75m
      memory: 384Mi

crds:
  enabled: false

alertmanager:
  enabled: false

nodeExporter:
  enabled: false # Handling GKE autopilot: https://github.com/SumoLogic/sumologic-kubernetes-collection/issues/1468#issuecomment-1005800179

coreDns:
  enabled: false # Handling GKE autopilot: https://github.com/SumoLogic/sumologic-kubernetes-collection/issues/1468#issuecomment-1005800179

kubeDns:
  enabled: false # Handling GKE autopilot: https://github.com/SumoLogic/sumologic-kubernetes-collection/issues/1468#issuecomment-1005800179

grafana:
  enabled: false
  serviceMonitor:
    enabled: false

kubeControllerManager:
  enabled: false

kubeEtcd:
  enabled: false

kubelet:
  namespace: qovery
  serviceMonitor:
    resource: true
    # From kubernetes 1.18, /metrics/resource/v1alpha1 renamed to /metrics/resource
    resourcePath: "/metrics/resource"

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false

kubeStateMetrics:
  enabled: true

prometheus:
  enabled: true
  serviceAccount:
    annotations:
      iam.gke.io/gcp-service-account: "set-by-engine-code"
  additionalRulesForClusterRole:  # to avoid error in the thanos-sidecar
    - apiGroups: [ "" ]
      resources:
        - pods
        - endpoints
        - services
        - nodes
      verbs:
        - get
        - list
        - watch
  thanosService:
    enabled: true
  thanosServiceMonitor:
    enabled: true
  prometheusSpec:
    image:
      registry: public.ecr.aws/r3m4q3r9
      repository: pub-mirror-prometheus
    thanos:
      objectStorageConfig:
        secret:
          type: GCS
          config:
            bucket: "set-by-engine-code"
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    retention: 7d
    retentionSize: "7GB" # prometheus db
    walCompression: true
    externalUrl: set-by-engine-code
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: set-by-engine-code
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: "8Gi"
    resources:
      limits:
        cpu: "4"
        memory: "8Gi"
      requests:
        cpu: "1"
        memory: "4Gi"
    replicas: "set-by-engine-code"

prometheusOperator:
  priorityClassName: qovery-high-priority
  prometheusConfigReloader:
    image:
      registry: public.ecr.aws/r3m4q3r9
      repository: pub-mirror-prometheus-config-reloader
  thanosImage:
    registry: public.ecr.aws/r3m4q3r9
    repository: pub-mirror-thanos
  image:
    registry: public.ecr.aws/r3m4q3r9
    repository: pub-mirror-prometheus-operator
  kubeletService:
    namespace: qovery
  resources:
    limits:
      cpu: "1"
      memory: "1Gi"
    requests:
      cpu: "200m"
      memory: "1Gi"
  tls:
    enabled: false
  admissionWebhooks:
    enabled: false

prometheus-node-exporter:
  priorityClassName: set-by-engine-code
  resources:
    limits:
      cpu: "20m"
      memory: "32Mi"
    requests:
      cpu: "10m"
      memory: "32Mi"
  prometheus:
    monitor:
      enabled: false
