controller:
  useComponentLabel: true
  config:
    use-proxy-protocol: "true"
    proxy-body-size: 100m
    server-tokens: "false"
  electionID: ingress-controller-leader-{{ id }}
  ingressClass: "{{ id }}"
  scope:
    enabled: true
    namespace: "{{ namespace }}"
  extraArgs:
    default-ssl-certificate: "cert-manager/letsencrypt-acme-qovery-cert"
  defaultBackendService: ""
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
  terminationGracePeriodSeconds: 60
  livenessProbe:
    failureThreshold: 3

  # TODO: It should be replaced by tera context values
  # for now they are now properly injected
  # see https://github.com/Qovery/engine/pull/264
  replicaCount: 2
  minAvailable: 1

  # TODO: It should be replaced by tera context values
  # for now they are not properly injected
  # see https://github.com/Qovery/engine/pull/264
  resources:
    limits:
      cpu: 1
      memory: 384Mi
    requests:
      cpu: 1
      memory: 384Mi

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 50

  ## Override NGINX template
  customTemplate:
    configMapName: ""
    configMapKey: ""

  service:
    enabled: true
    annotations:
      service.beta.kubernetes.io/do-loadbalancer-name: "{{ id }}"
      service.beta.kubernetes.io/do-loadbalancer-protocol: "tcp"
      service.beta.kubernetes.io/do-loadbalancer-size-slug: "lb-small"
      service.beta.kubernetes.io/do-loadbalancer-algorithm: "least_connections"
      service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
      # required for LE http challenges
      service.beta.kubernetes.io/do-loadbalancer-hostname: "{{ custom_domain_name }}"
    labels:
      app_id : "{{ id }}"
    externalTrafficPolicy: "Local"
    sessionAffinity: ""
    healthCheckNodePort: 0
  admissionWebhooks:
    enabled: false
  lifecycle: {}

defaultBackend:
  enabled: true
  name: default-backend

