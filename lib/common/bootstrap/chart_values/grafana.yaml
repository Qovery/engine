image:
  repository: set-by-engine-code

rbac:
  create: true
  pspEnabled: false
  pspUseAppArmor: true
  namespaced: false
  extraRoleRules: []
  extraClusterRoleRules: []

serviceAccount:
  create: true
  name:
  nameTest:
  annotations: {}

podDisruptionBudget: {}

deploymentStrategy:
  type: Recreate

persistence:
  type: pvc
  enabled: false
  storageClassName: set-by-engine-code
  accessModes:
    - ReadWriteOnce
  size: 1Gi
  finalizers:
    - kubernetes.io/pvc-protection
  inMemory:
    enabled: true

adminUser: set-by-engine-code
adminPassword: set-by-engine-code

notifiers: {}

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: "default"
        orgId: 1
        folder: ""
        type: file
        disableDeletion: true
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

dashboards:
  default:
    node-exporter:
      file: dashboards/node-exporter.json
    kubernetes-cluster:
      file: dashboards/kubernetes-cluster.json
    cert-manager:
      file: dashboards/cert-manager.json
    aws-limits:
      file: dashboards/aws-limits.json
    detailed-pods-resources:
      file: dashboards/detailed-pods-resources.json
    client-pod-usage:
      file: dashboards/client_pod_usage.json
    kubernetes-capacity-planning:
      file: dashboards/kubernetes-capacity-planning.json
    engine:
      file: dashboards/engine.json
  #  node-exporter:
  #    gnetId: 18785
  #    revision: 22
  #    datasource: Prometheus
  #   local-dashboard:
  #     url: https://example.com/repository/test.json
  #   local-dashboard-base64:
  #     url: https://example.com/repository/test-b64.json
  #     b64content: true

grafana.ini:
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net

env:
  AWS_WEB_IDENTITY_TOKEN_FILE: /var/run/secrets/eks.amazonaws.com/serviceaccount/token

extraSecretMounts:
  - name: aws-iam-token
    mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
    readOnly: true
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
