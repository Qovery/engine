{%- if not is_storage %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ sanitized_name }}
  namespace: {{ namespace }}
  labels:
    appLongId: {{ long_id }}
    ownerId: {{ owner_id }}
    envId: {{ environment_id }}
    envLongId: {{ environment_long_id }}
    projectLongId: {{ project_long_id }}
    appId: {{ id }}
    app: {{ sanitized_name }}
  annotations:
    releaseTime: {% raw %}{{ dateInZone "2006-01-02 15:04:05Z" (now) "UTC"| quote }}{% endraw %}
spec:
  {%- if min_instances == max_instances %}
  replicas: {{ min_instances }}
  {%- endif %}
  strategy:
    type: RollingUpdate
    rollingUpdate:
    {% if max_instances == 1 %}
      maxSurge: 1
    {% else %}
      maxSurge: 25%
      maxUnavailable: 10%
    {% endif %}
  selector:
    matchLabels:
      ownerId: {{ owner_id }}
      envId: {{ environment_id }}
      appId: {{ id }}
      app: {{ sanitized_name }}
  template:
    metadata:
      labels:
        appLongId: {{ long_id }}
        ownerId: {{ owner_id }}
        envId: {{ environment_id }}
        appId: {{ id }}
        app: {{ sanitized_name }}
        envLongId: {{ environment_long_id }}
        projectLongId: {{ project_long_id }}
        qovery.com/service-id: {{ long_id }}
        qovery.com/service-type: application
        qovery.com/environment-id: {{ environment_long_id }}
      annotations:
        checksum/config: {% raw %}{{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}{% endraw %}
        appCommitId: {{ version }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "appLongId"
                      operator: In
                      values:
                      - {{ long_id }}
                topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: false
      {%- if security_service_account_name != "" %}
      serviceAccountName: {{ security_service_account_name }}
      {%- endif %}
      terminationGracePeriodSeconds: 60
      securityContext: {}
      {%- if is_registry_secret %}
      imagePullSecrets:
        - name: {{ registry_secret }}
      {%- endif %}
      containers:
        - name: {{ sanitized_name }}
          image: "{{ image_name_with_tag }}"
          env:
            {%- for ev in environment_variables %}
            - name: "{{ ev.key }}"
              valueFrom:
                secretKeyRef:
                  name: {{ sanitized_name }}
                  key: {{ ev.key }}
            {%- endfor %}
            {%- if private_port %}
          ports:
            {%- for port in ports %}
            - containerPort: {{ port.port }}
              name: "p{{ port.port }}"
              protocol: TCP
            {%- endfor %}
          {%- if readiness_probe_enabled %}
          readinessProbe:
            {%- if readiness_probe_tcp_enabled %}
            tcpSocket:
              port: {{ private_port }}
            {%- endif %}
            {%- if readiness_probe_http_enabled %}
            httpGet:
              port: {{ private_port }}
              path: {{ readiness_probe_http_get_path }}
            {%- endif %}
            initialDelaySeconds: {{ readiness_probe_initial_delay_seconds }}
            periodSeconds: {{ readiness_probe_period_seconds }}
            timeoutSeconds: {{ readiness_probe_timeout_seconds }}
            successThreshold: {{ readiness_probe_success_threshold }}
            failureThreshold: {{ readiness_probe_failure_threshold }}
          {%- endif %}
          {%- if liveness_probe_enabled %}
          livenessProbe:
            {%- if liveness_probe_tcp_enabled %}
            tcpSocket:
              port: {{ private_port }}
            {%- endif %}
            {%- if liveness_probe_http_enabled %}
            httpGet:
              port: {{ private_port }}
              path: {{ liveness_probe_http_get_path }}
            {%- endif %}
            initialDelaySeconds: {{ liveness_probe_initial_delay_seconds }}
            periodSeconds: {{ liveness_probe_period_seconds }}
            timeoutSeconds: {{ liveness_probe_timeout_seconds }}
            successThreshold: {{ liveness_probe_success_threshold }}
            failureThreshold: {{ liveness_probe_failure_threshold }}
          {%- endif %}
          {%- endif %}
          resources:
            limits:
              cpu: {{ cpu_burst }}
              memory: {{ total_ram_in_mib }}Mi
            requests:
              cpu: {{ total_cpus }}
              memory: {{ total_ram_in_mib }}Mi
{%- endif %}
