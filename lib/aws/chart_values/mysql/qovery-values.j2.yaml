image:
  registry: {{ registry_name }}
  repository: {{ repository_name }}
  tag: "{{ version }}"

# -master is required to keep compatibility with previous installed versions
nameOverride: "{{ sanitized_name }}-master"
fullnameOverride: "{{ sanitized_name }}-master"

commonLabels:
  # app label required for legacy chart (installed before 15/06/23)
  app: "{{ sanitized_name }}" 
  envId: "{{ environment_id }}"
  databaseId: "{{ id }}"
  databaseLongId: "{{ long_id }}"
  envLongId: "{{ environment_long_id }}"
  projectLongId: "{{ project_long_id }}"
  qovery.com/service-id: "{{ long_id }}"
  qovery.com/service-type: "database"
  qovery.com/environment-id: "{{ environment_long_id }}"
  qovery.com/project-id: "{{ project_long_id }}"
#  Warning: commonLabels are also added to PVC and PV

auth:
  rootPassword: "{{ database_password }}"
  username: "qovery"
  password: "{{ database_password }}"
  database: "{{ sanitized_name }}"

primary:
  nodeAffinityPreset:
    type: "{{ node_affinity_type }}"
    key: "{{ node_affinity_key }}"
    values: {{ node_affinity_values }}
{%- if node_affinity %}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
{%- for key, value in node_affinity %}
            - key: "{{ key }}"
              operator: In
              values:
                - "{{ value }}"
{%- endfor %}
{% endif %}
  tolerations:
{%- for key, value in toleration %}
    - key: "{{ key }}"
      operator: Exists
      effect: "{{ value }}"
{%- endfor %}
  podLabels:
    # app label required for legacy chart (installed before 15/06/23)
    app: "{{ sanitized_name }}" 
    envId: "{{ environment_id }}"
    databaseId: "{{ id }}"
    databaseLongId: "{{ long_id }}"
    envLongId: "{{ environment_long_id }}"
    projectLongId: "{{ project_long_id }}"
    qovery.com/service-id: "{{ long_id }}"
    qovery.com/service-type: "database"
    qovery.com/environment-id: "{{ environment_long_id }}"
    qovery.com/project-id: "{{ project_long_id }}"
    {%- for key, value in labels_group.common %}
    {{ key }}: |-
       {{ value }}
    {%- endfor %}
  resources:
    requests:
      memory: "{{ ram_request_in_mib }}"
      cpu: "{{ cpu_request_in_milli }}"
    limits:
      memory: "{{ ram_limit_in_mib }}"
      cpu: "{{ cpu_limit_in_milli }}"
  persistence:
    storageClass: "{{ database_disk_type }}"
    size: "{{ database_disk_size_in_gib }}Gi"
    labels:
      # app label required for legacy chart (installed before 15/06/23)
      app: "{{ sanitized_name }}" 
      envId: "{{ environment_id }}"
      databaseId: "{{ id }}"
      databaseLongId: "{{ long_id }}"
      envLongId: "{{ environment_long_id }}"
      projectLongId: "{{ project_long_id }}"
      qovery.com/service-id: "{{ long_id }}"
      qovery.com/service-type: "database"
      qovery.com/environment-id: "{{ environment_long_id }}"
      qovery.com/project-id: "{{ project_long_id }}"
    annotations:
      ownerId: "{{ owner_id }}"
      envId: "{{ environment_id }}"
      databaseId: "{{ id }}"
      databaseName: "{{ sanitized_name }}"
      qovery.com/service-id: "{{ long_id }}"
      qovery.com/service-type: "database"
      qovery.com/environment-id: "{{ environment_long_id }}"
      qovery.com/project-id: "{{ project_long_id }}"
  service:
    name: {{ service_name }}
    type: {% if publicly_accessible -%}LoadBalancer{% else -%}ClusterIP{% endif %}
    {% if publicly_accessible -%}
    headless:
      annotations:
        {%- for key, value in annotations_group.service %}
        {{ key }}: |-
           {{ value }}
        {%- endfor %}
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "{{ aws_load_balancer_type }}"
      service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
      {% if aws_load_balancer_type == "external" %}
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      {% endif %}
      {%- for annotations in additional_annotations %}
      {{ annotations.key }}: |-
         {{ annotations.value }}
      {%- endfor %}
      external-dns.alpha.kubernetes.io/hostname: "{{ fqdn }}"
      external-dns.alpha.kubernetes.io/ttl: "300"
      {%- for key, value in annotations_group.service %}
      {{ key }}: |-
         {{ value }}
      {%- endfor %}
    {% endif %}
  pdb:
    create: false
  podAnnotations:
    {%- for key, value in annotations_group.pods %}
    {{ key }}: |-
       {{ value }}
    {%- endfor %}

rbac:
  create: true

volumePermissions:
  enabled: true
  image:
    registry: {{ registry_name }}
    repository: {{ repository_name_bitnami_shell }}

readReplicas:
  nodeAffinityPreset:
    type: "{{ node_affinity_type }}"
    key: "{{ node_affinity_key }}"
    values: {{ node_affinity_values }}
{%- if node_affinity %}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
{%- for key, value in node_affinity %}
            - key: "{{ key }}"
              operator: In
              values:
                - "{{ value }}"
{%- endfor %}
{% endif %}
  tolerations:
{%- for key, value in toleration %}
    - key: "{{ key }}"
      operator: Exists
      effect: "{{ value }}"
{%- endfor %}
