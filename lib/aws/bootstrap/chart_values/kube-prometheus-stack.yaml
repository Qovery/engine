defaultRules:
  create: true
  rules:
    alertmanager: false
    etcd: false
    configReloaders: true
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeProxy: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeStateMetrics: false
    nodeExporterAlerting: false
    nodeExporterRecording: false
    windows: false

kube-state-metrics:
  image:
    registry: public.ecr.aws/r3m4q3r9
    repository: pub-mirror-kube-state-metrics
  prometheus:
    monitor:
      enabled: true
      honorLabels: true
  metricLabelsAllowlist:
    - pods=[qovery.com/project-id,qovery.com/environment-id,qovery.com/service-id]
    - horizontalpodautoscalers=[qovery.com/service-id]
    - jobs=[qovery.com/service-id]
    - cronjobs=[qovery.com/service-id]
    - services=[qovery.com/service-id]
    - deployments=[qovery.com/service-id]
    - statefulsets=[qovery.com/service-id]
    - ingresses=[qovery.com/associated-service-id]
  resources:
    limits:
      cpu: 75m
      memory: 384Mi
    requests:
      cpu: 75m
      memory: 384Mi

crds:
  enabled: false

alertmanager:
  enabled: false

grafana:
  enabled: false
  serviceMonitor:
    enabled: false

kubeControllerManager:
  enabled: false

kubeEtcd:
  enabled: false

kubelet:
  serviceMonitor:
    ## Disable scrapping from resource service, because it's already handled by cAvisor service, as per the official doc:
    ## Enable scraping /metrics/resource from kubelet's service
    ## This is disabled by default because container metrics are already exposed by cAdvisor
    resource: false
    # From kubernetes 1.18, /metrics/resource/v1alpha1 renamed to /metrics/resource
    resourcePath: "/metrics/resource"

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false

kubeStateMetrics:
  enabled: true

prometheus:
  enabled: true
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: "set-by-engine-code"
  thanosService:
    enabled: true
  thanosServiceMonitor:
    enabled: true
  prometheusSpec:
    image:
      registry: public.ecr.aws/r3m4q3r9
      repository: pub-mirror-prometheus
    # Replica label to be used by thanos
    replicaExternalLabelName: "replica"
    thanos:
      objectStorageConfig:
         secret:
           type: S3
           config:
             aws_sdk_auth: true
             bucket: "set-by-engine-code"
             endpoint: "set-by-engine-code"
             region: "set-by-engine-code"
             signature_version2: "set-by-engine-code" 
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    retention: 90d
    retentionSize: "7GB" # prometheus db
    walCompression: true
    externalUrl: set-by-engine-code
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: set-by-engine-code
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: "8Gi"
    resources:
      limits:
        cpu: "4"
        memory: "8Gi"
      requests:
        cpu: "1"
        memory: "2Gi"
    replicas: "set-by-engine-code"

prometheusOperator:
  prometheusConfigReloader:
    image:
      registry: public.ecr.aws/r3m4q3r9
      repository: pub-mirror-prometheus-config-reloader
  thanosImage:
    registry: public.ecr.aws/r3m4q3r9
    repository: pub-mirror-thanos
  image:
    registry: public.ecr.aws/r3m4q3r9
    repository: pub-mirror-prometheus-operator
  resources:
    limits:
      cpu: "1"
      memory: "1Gi"
    requests:
      cpu: "200m"
      memory: "1Gi"
  tls:
    enabled: false
  admissionWebhooks:
    enabled: false

prometheus-node-exporter:
  image:
    registry: public.ecr.aws/r3m4q3r9
    repository: pub-mirror-prometheus-node-exporter
  priorityClassName: set-by-engine-code
  resources:
    limits:
      cpu: "20m"
      memory: "32Mi"
    requests:
      cpu: "10m"
      memory: "32Mi"
  prometheus:
    monitor:
      enabled: false
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
                - fargate