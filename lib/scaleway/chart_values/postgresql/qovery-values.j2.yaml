image:
  registry: {{ registry_name}}
  repository: {{ repository_name}}
  tag: "{{ version }}"

## sanitized_name of an already existing service account. Setting name value disables the automatic service account creation.
nameOverride: "{{ sanitized_name }}"
fullnameOverride: "{{ sanitized_name }}"
commonLabels:
  envId: "{{ environment_id }}"
  databaseId: "{{ id }}"
  databaseLongId: "{{ long_id }}"
  envLongId: "{{ environment_long_id }}"
  projectLongId: "{{ project_long_id }}"
  qovery.com/service-id: "{{ long_id }}"
  qovery.com/service-type: "database"
  qovery.com/environment-id: "{{ environment_long_id }}"
  qovery.com/project-id: "{{ project_long_id }}"
  {%- for key, value in labels_group.common %}
  {{ key }}: |-
     {{ value }}
  {%- endfor %}

volumePermissions:
  enabled: true
  image:
    registry: {{ registry_name }}
    repository: {{ repository_name_bitnami_shell }}

## sanitized_name of an already existing service account. Setting name value disables the automatic service account creation.
serviceAccount:
  create: true
  name: "{{ sanitized_name }}"

rbac:
  create: true

audit:
  logHostname: true
  logConnectitrue: true
  logDisconnections: true

auth:
  postgresPassword: "{{ database_password }}"
  username: "{{ database_login }}"
  password: "{{ database_password }}"
  database: "{{ database_db_name }}"

primary:
  initdb:
    user: "{{ database_login }}"
    password: "{{ database_password }}"
  service:
    name: "{{ service_name }}"
    type: {% if publicly_accessible -%}LoadBalancer{% else -%}ClusterIP{% endif %}
    {% if publicly_accessible -%}
    annotations:
      service.beta.kubernetes.io/scw-loadbalancer-forward-port-algorithm: "leastconn"
      service.beta.kubernetes.io/scw-loadbalancer-protocol-http: "false"
      service.beta.kubernetes.io/scw-loadbalancer-proxy-protocol-v1: "false"
      service.beta.kubernetes.io/scw-loadbalancer-proxy-protocol-v2: "false"
      service.beta.kubernetes.io/scw-loadbalancer-health-check-type: tcp
      service.beta.kubernetes.io/scw-loadbalancer-use-hostname: "false"
      external-dns.alpha.kubernetes.io/hostname: "{{ fqdn }}"
      external-dns.alpha.kubernetes.io/ttl: "300"
      {%- for annotations in additional_annotations %}
      {{ annotations.key }}: |-
          {{ annotations.value }}
      {%- endfor %}
      {%- for key, value in annotations_group.service %}
      {{ key }}: |-
         {{ value }}
      {%- endfor %}
    headless:
      annotations:
        {%- for key, value in annotations_group.service %}
        {{ key }}: |-
           {{ value }}
        {%- endfor %}
    {% endif %}
  persistence:
    storageClass: "{{ database_disk_type }}"
    labels:
      # app label required for legacy cahrt (installed before 01/06/23)
      app: "{{ sanitized_name }}" 
      envId: "{{ environment_id }}"
      databaseId: "{{ id }}"
      databaseLongId: "{{ long_id }}"
      envLongId: "{{ environment_long_id }}"
      projectLongId: "{{ project_long_id }}"
      qovery.com/service-id: "{{ long_id }}"
      qovery.com/service-type: "database"
      qovery.com/environment-id: "{{ environment_long_id }}"
      qovery.com/project-id: "{{ project_long_id }}"
    size: "{{ database_disk_size_in_gib }}Gi"
    annotations:
      ownerId: "{{ owner_id }}"
      envId: "{{ environment_id }}"
      databaseId: "{{ id }}"
      databaseName: "{{ sanitized_name }}"
  resources:
    requests:
      memory: "{{ ram_request_in_mib }}"
      cpu: "{{ cpu_request_in_milli }}"
    limits:
      memory: "{{ ram_limit_in_mib }}"
      cpu: "{{ cpu_limit_in_milli }}"
  podAnnotations:
    {%- for key, value in annotations_group.pods %}
    {{ key }}: |-
       {{ value }}
    {%- endfor %}
  annotations:
    {%- for key, value in annotations_group.stateful_set %}
    {{ key }}: |-
       {{ value }}
    {%- endfor %}

readReplicas:
  podAnnotations:
    {%- for key, value in annotations_group.pods %}
    {{ key }}: |-
       {{ value }}
    {%- endfor %}
