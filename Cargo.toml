[package]
name = "qovery-engine"
version = "0.1.0"
authors = ["Romaric Philogene <romaric@qovery.com>"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bitflags = "1.3.2"
chrono = "0.4.22"
derivative = "2.2.0"
git2 = "0.14.3"
walkdir = "2.3.2"
itertools = "0.10.3"
base64 = "0.13.0"
dirs = "4.0.0"
retry = "1.3.1"
trust-dns-resolver = "0.22.0"
rand = "0.8.5"
semver = "1.0.9"
gethostname = "0.4.1"
reqwest = { version = "0.11.10", features = ["blocking", "json"] }
futures = "0.3.21"
timeout-readwrite = "0.3.1"
lazy_static = "1.4.0"
uuid = { version = "1.0.0", features = ["v4", "serde"] }
url = { version = "2.2.2", features = ["serde"] }
function_name = "0.3.0"
thiserror = "1.0.31"
strum = "0.24.0"
strum_macros = "0.24.0"
urlencoding = "2.1.0"
regex = "1"
async-trait = "0.1.57"
scopeguard = "1.1.0"
libc = "0.2"
anyhow = "1.0.68"

kube = { version = "0.73.1", features = ["default", "runtime", "derive", "ws"] }
k8s-openapi = { version = "0.15.0", default-features = false, features = ["v1_22"] }

# FIXME use https://crates.io/crates/blocking instead of runtime.rs

# tar gz
flate2 = "1.0.23"
tar = "0.4.38"

# logger
tracing = "0.1.34"
tracing-subscriber = { version = "0.3.11", features = ["json"] }

# Docker deps
# shiplift = "0.6.0"

# Filesystem
sysinfo = "0.28.1"

# Jinja2
tera = "1.15.0"

# Json
serde = "1.0.137"
serde_json = "1.0.81"
serde_derive = "1.0.137"
serde_yaml = "0.9.13"

# Secrets manager
vaultrs = "0.7.0"
vaultrs-login = "0.1.7"

# AWS deps
tokio = { version = "1.18.1", features = ["full"] }
rusoto_core = "0.48.0"
rusoto_sts = "0.48.0"
rusoto_credential = "0.48.0"
rusoto_ecr = "0.48.0"
rusoto_eks = "0.48.0"
rusoto_s3 = "0.48.0"
rusoto_iam = "0.48.0"
aws-config = "0.54.1"
aws-sdk-elasticloadbalancingv2 = "0.24.0"
aws-sdk-eks = "0.24.0"
aws-sdk-rds = "0.24.0"
aws-sdk-elasticache = "0.24.0"
aws-sdk-docdb = "0.24.0"
aws-sdk-ec2 = "0.24.0"
aws-types = "0.54.1"
aws-smithy-client = { version="0.54.4", features=["rt-tokio"] }
aws-smithy-async = { version="0.54.4", features=["rt-tokio"] }

# Scaleway Deps
scaleway_api_rs = "=0.1.2"

[dev-dependencies]
bstr = "0.2.17"
tempdir = "0.3.7"
tempfile = "3.3.0"
maplit = "1.0.2"
tracing-test = "0.2.1"
time = "0.3.9"
passwords = "3.1.9"
const_format = "0.2.23"
hashicorp_vault = "2.1.0"
curl = "0.4.43"
dotenv = "0.15.0"

[features]
default = []
# Check that env logger is in a correct state when emitting logs
env-logger-check = []
test-all = ["test-all-minimal", "test-all-self-hosted", "test-all-infra", "test-all-managed-services", "test-all-whole-enchilada"]

# Minimal depencies test (i.e: build, deploy nothing managed)
test-aws-minimal = ["env-logger-check"]
test-aws-ec2-minimal = ["env-logger-check"]
test-scw-minimal = ["env-logger-check"]
test-all-minimal = ["test-aws-minimal", "test-aws-ec2-minimal", "test-scw-minimal"]

# functionnal tests by type
test-aws-self-hosted = ["env-logger-check"]
test-aws-ec2-self-hosted = ["env-logger-check"]
test-scw-self-hosted = ["env-logger-check"]
test-all-self-hosted = ["test-aws-self-hosted", "test-aws-ec2-self-hosted", "test-scw-self-hosted"]

test-aws-managed-services = ["env-logger-check"]
test-aws-ec2-managed-services = ["env-logger-check"]
test-scw-managed-services = ["env-logger-check"]
test-all-managed-services = ["test-aws-managed-services", "test-aws-ec2-managed-services", "test-scw-managed-services"]

test-aws-infra = []
test-aws-ec2-infra = []
test-scw-infra = []
test-all-infra = ["test-aws-infra", "test-aws-ec2-infra", "test-scw-infra"]

test-aws-whole-enchilada = []
test-aws-ec2-whole-enchilada = []
test-scw-whole-enchilada = []
test-all-whole-enchilada = ["test-aws-whole-enchilada", "test-aws-ec2-whole-enchilada", "test-scw-whole-enchilada"]

# functionnal tests by provider
test-aws-all = ["test-aws-infra", "test-aws-managed-services", "test-aws-self-hosted", "test-aws-whole-enchilada"]
test-aws-ec2-all = ["test-aws-ec2-infra", "test-aws-ec2-managed-services", "test-aws-ec2-self-hosted", "test-aws-ec2-whole-enchilada"]
test-scw-all = ["test-scw-infra", "test-scw-managed-services", "test-scw-self-hosted", "test-scw-whole-enchilada"]

# functionnal test with only a k8s cluster as a dependency
test-local-kube = []
test-local-docker = []
test-all-local = ["test-local-kube", "test-local-docker"]
