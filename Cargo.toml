[package]
name = "qovery-engine"
version = "0.0.0"
authors = ["Romaric Philogene <romaric@qovery.com>"]
edition = "2024"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
atomic_enum = "0.3.0"
bitflags = "2.9.1"
chrono = "0.4.41"
derivative = "2.2.0"
git2 = { version = "0.20.2", features = ["vendored-libgit2"] }
walkdir = "2.5.0"
itertools = "0.14.0"
base64 = "0.22.1"
dirs = "6.0.0"
retry = "2.1.0"
trust-dns-resolver = "0.23.2"
rand = "0.9.1"
semver = "1.0.26"
gethostname = "1.0.2"
reqwest = { version = "0.12.15", default-features = false, features = [
    "blocking",
    "json",
    "rustls-tls-manual-roots-no-provider",
    "gzip",
    "zstd",
] }
futures = "0.3.31"
timeout-readwrite = "0.4.0"
uuid = { version = "1.16.0", features = ["v4", "serde"] }
url = { version = "2.5.4", features = ["serde"] }
function_name = "0.3.0"
thiserror = "2.0.12"
strum = "0.27.1"
strum_macros = "0.27.1"
urlencoding = "2.1.3"
regex = "1.11.1"
async-trait = "0.1.88"
scopeguard = "1.2.0"
libc = "0.2.172"
anyhow = "1.0.98"
tempfile = "3"
governor = "0.10.0"
once_cell = "1.21.3"
nonzero_ext = "0.3.0"
json-patch = "4.0.0"
jsonptr = "0.7.1"
enum_dispatch = "0.3.13"
oneshot = "0.1.11"
time = { version = "0.3.41", features = ["formatting", "parsing"] }
derive_more = { version = "2.0.1", features = ["display"] }
rustls = { version = "0.23.27", features = [] }

kube = { version = "1.0.0", default-features = false, features = [
    "rustls-tls",
    "client",
    "derive",
    "runtime",
    "ws",
    "aws-lc-rs",
    "gzip",
] }
k8s-openapi = { version = "0.25.0", default-features = false, features = [
    "v1_31",
] }

# tar gz
flate2 = "1.1.1"
tar = "0.4.44"

# logger
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["json"] }

# Network
ipnet = "2.11.0"

# Jinja2
tera = "1.20.0"

# Json
serde = "1.0.219"
serde_json = "1.0.140"
serde_derive = "1.0.219"
serde_yaml = "0.9.34"
serde_with = "3.12.0"
schemars = "0.8.22"
duration-str = "0.17.0"

# AWS deps
tokio = { version = "1.45.0", features = ["full"] }
rusoto_core = { git = "https://github.com/Qovery/rusoto.git", rev = "61ead3b7610c76f440197465a220226b7c790c75" }
rusoto_sts = { git = "https://github.com/Qovery/rusoto.git", rev = "61ead3b7610c76f440197465a220226b7c790c75" }
rusoto_credential = { git = "https://github.com/Qovery/rusoto.git", rev = "61ead3b7610c76f440197465a220226b7c790c75" }
rusoto_ecr = { git = "https://github.com/Qovery/rusoto.git", rev = "61ead3b7610c76f440197465a220226b7c790c75" }
rusoto_eks = { git = "https://github.com/Qovery/rusoto.git", rev = "61ead3b7610c76f440197465a220226b7c790c75" }
rusoto_s3 = { git = "https://github.com/Qovery/rusoto.git", rev = "61ead3b7610c76f440197465a220226b7c790c75" }
rusoto_signature = { git = "https://github.com/Qovery/rusoto.git", rev = "61ead3b7610c76f440197465a220226b7c790c75" }
aws-sdk-elasticloadbalancingv2 = "1.77.0"
aws-sdk-eks = "1.87.0"
aws-sdk-rds = "1.87.0"
aws-sdk-elasticache = "1.74.0"
aws-sdk-docdb = "1.72.0"
aws-sdk-ec2 = "1.130.0"
aws-types = "1.3.7"
aws-sdk-iam = "1.72.0"
aws-credential-types = "1.2.3"

# Azure deps
azure_core = "0.21.0"
azure_storage = "0.21.0"
azure_storage_blobs = "0.21.0"
azure_mgmt_containerregistry = "0.21.0"
azure_identity = "0.21.0"

# Scaleway deps
scaleway_api_rs = { git = "https://github.com/Qovery/scaleway-api-rs", branch = "main" }

# GCP deps
google-cloud-auth = { version = "0.20.0", features = [] }
google-cloud-storage = { version = "0.24.0", default-features = false, features = [
    "rustls-tls",
    "auth",
] }
google-cloud-artifact-registry = { version = "0.8.0", default-features = false, features = [
    "rustls-tls",
    "auth",
] }
google-cloud-googleapis = { version = "0.16.1", features = [] }
# don't update, needs to be in sync with google-cloud-artifact-registry internal version
google-cloud-gax = { version = "0.19.2", features = [] }
tokio-util = "0.7.15"

[dev-dependencies]
bstr = "1.12.0"
tempdir = "0.3.7"
tempfile = "3.20.0"
maplit = "1.0.2"
tracing-test = "0.2.5"
passwords = "3.1.16"
hashicorp_vault = "2.1.1"
curl = "0.4.47"
dotenv = "0.15.0"
faux = "0.1.12"
testcontainers = { version = "0.24.0", features = ["blocking"] }


[features]
default = []
# Check that env logger is in a correct state when emitting logs
env-logger-check = []
test-all = [
    "test-all-minimal",
    "test-all-self-hosted",
    "test-all-infra",
    "test-all-managed-services",
    "test-all-whole-enchilada",
]

# Minimal depencies test (i.e: build, deploy nothing managed)
test-aws-minimal = ["env-logger-check"]
test-azure-minimal = ["env-logger-check"]
test-scw-minimal = ["env-logger-check"]
test-gcp-minimal = ["env-logger-check"]
test-all-minimal = [
    "test-aws-minimal",
    "test-azure-minimal",
    "test-scw-minimal",
    "test-gcp-minimal",
]

# functionnal tests by type
test-aws-self-hosted = ["env-logger-check", "test-git-container"]
test-azure-self-hosted = ["env-logger-check", "test-git-container"]
test-scw-self-hosted = ["env-logger-check", "test-git-container"]
test-gcp-self-hosted = ["env-logger-check", "test-git-container"]
test-all-self-hosted = [
    "test-aws-self-hosted",
    "test-azure-self-hosted",
    "test-scw-self-hosted",
    "test-gcp-self-hosted",
]

test-aws-managed-services = ["env-logger-check"]
test-azure-managed-services = ["env-logger-check"]
test-scw-managed-services = ["env-logger-check"]
test-gcp-managed-services = ["env-logger-check"]
test-all-managed-services = [
    "test-aws-managed-services",
    "test-azure-managed-services",
    "test-scw-managed-services",
    "test-gcp-managed-services",
]

test-aws-infra = []
test-aws-infra-karpenter = []
test-aws-infra-arm = []
test-aws-infra-nat-gateway = []
test-azure-infra = []
test-scw-infra = []
test-gcp-infra = []
test-all-infra = [
    "test-aws-infra",
    "test-aws-infra-karpenter",
    "test-aws-infra-arm",
    "test-aws-infra-nat-gateway",
    "test-azure-infra",
    "test-scw-infra",
    "test-gcp-infra",
]

test-aws-infra-upgrade = []
test-azure-infra-upgrade = []
test-scw-infra-upgrade = []
test-gcp-infra-upgrade = []
test-all-infra-upgrade = [
    "test-aws-infra-upgrade",
    "test-azure-infra-upgrade",
    "test-scw-infra-upgrade",
    "test-gcp-infra-upgrade",
]

test-aws-whole-enchilada = []
test-azure-whole-enchilada = []
test-scw-whole-enchilada = []
test-gcp-whole-enchilada = []
test-all-whole-enchilada = [
    "test-aws-whole-enchilada",
    "test-azure-whole-enchilada",
    "test-scw-whole-enchilada",
    "test-gcp-whole-enchilada",
]

# functionnal tests by provider
test-aws-all = [
    "test-aws-infra",
    "test-aws-managed-services",
    "test-aws-self-hosted",
    "test-aws-whole-enchilada",
]
test-azure-all = [
    "test-azure-infra",
    "test-azure-managed-services",
    "test-azure-self-hosted",
    "test-azure-whole-enchilada",
]
test-scw-all = [
    "test-scw-infra",
    "test-scw-managed-services",
    "test-scw-self-hosted",
    "test-scw-whole-enchilada",
]
test-gcp-all = [
    "test-gcp-infra",
    "test-gcp-managed-services",
    "test-gcp-self-hosted",
    "test-gcp-whole-enchilada",
]

test-quarantine = []

# functionnal test with specific action for git processing not meant to be used in production
test-git-container = []

# functionnal test with only a k8s cluster as a dependency
test-local-kube = []
test-local-docker = []
test-all-local = ["test-local-kube", "test-local-docker"]
